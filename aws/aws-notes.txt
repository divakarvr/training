1. VPC
2. EC2
    * ami
    * EBS
3. IAM


VPC:
    * Why Private networks are needed? 
        IPV4 - 32 bits i.e., 4 Octets 
             - N.of IPs = 2 ^ 32 = 4 Billion + Ips
             - Population = 8 Billion 

        Reasons: 
        ~ Not enough IPs to assign for all the People as all the IPs will be exhausted at some point
        ~ Companies would like to have Private IPs as much as Possible as they dont want to make everything Pulic

    * CIDR Ranges: 
        * We will have to decide how many IPs we need?
        * When creating a Private network, we have two parts in IPV4 (32 bits)
            1. Network bits 
            2. Host bits 

            0.0.0.0     -- Network Bits allocation & Host Bits  
            -------
                32 
            
            First 2 Octets cant be used - so, they are for Network Bits - Bare minimum req - 2^16 IPs = 65536 Ips

            VPC: 10.0.0.0/16
                    3rd octet: 4 bits to n/w  and the other 4 are for host
                    -   -   -   -   -   -   -   - 
                    128 64  32  16  8   4   2   1
                    
                Subnet-1: 10.0.128.0/20
                Subnet-2: 10.0.64.0/20
                Subnet-3: 10.0.32.0/20
                Subnet-4: 10.0.16.0/20

    * Subnets:
        Why are these necessary? 
            * To hide some of the servers like DB from the Outer world
        * There are 2 types of Subnets
            1. Private Subnet
            2. Public Subnet 



Pointers:
* NACLs are stateless i.e., You ll have to define both Inbound and Outbound rules
* NACLs always work on priority basis on the rule number. 
    --> Least rule number has the highest priority
* One NACL can be associated with any number of Subnets. But One subnet can be associated with Only one NACL. (Same with RouteTable)
* NAT Instance has to be hosted on the Public subnet inorder to let the Private Instance Allow/receive traffic from the Internet
    --> Another thing to enable this is add the route in RouteTable from 0.0.0.0/0 to NAT Instance/NAT Gateway
    --> NAT Instance charges similar to EC2 pricing (t2.micro is free for you. Use for development)
    --> NAT Gateway charges you money. But its high available, elastic in configuration and can send any amount of traffic to/fro unlike nat-instance 
        (as its limited by its own machine configuration)

EC2:
    ami:
        lets us create our own amis from the machines we have created and configured. 
        e.g., 
            * provision ubuntu 20/22
            * install Java
            * install jenkins 
            * configure the Jenkins 
            * Jenkins is installed and ready

            --> Create an ami out of the Instance ---> Jenkins server preinstalled in the image we've created 

        ami-background:
            Image hardening: (security aspect)
            It will take a image like ami/Ubuntu 20/22 / centos 
            * Install couple of softwares which are security related
            * Changes to installed s/w to block loop holes present in those s/w 

            Jenkins:
            * provision 
            * Install Java and Jenkins
                * configure the jenkins after installation
            * Start using

            provision a machine 
            Post-provision configuration:
                * Install couple of s/ws 
                * Configure those 
            Finally start using
    
    EBS: Elastic block store
            * Nothing but storage to the Instance i.e., EBS Volume 
        Snapshot: 
            * Is nothing but a backup of the Volume
        Lifecycle Manager:
            * Lets you to create schedules to create the snapshots regularly (like cron job)

IAM:
    * Authentication ~ logging in into aws (e.g.,)
    * Authorization ~ A specific service access can be assigned to you

    * Policy 
        * AWS managed policy
        * Customer managed policy
    * Users
    * Groups
    * Roles

